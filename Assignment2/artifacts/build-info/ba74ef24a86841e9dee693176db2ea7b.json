{
	"id": "ba74ef24a86841e9dee693176db2ea7b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"TransferToken.sol": {
				"content": "pragma solidity ^0.8.17;\r\n\r\ncontract TransferToken {\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"TransferToken.sol": {
				"TransferToken": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TransferToken.sol\":28:61  contract TransferToken {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TransferToken.sol\":28:61  contract TransferToken {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206745892e0c05c2f125be7f5e803dacf8591f7c9b4f9b0c2fca668308e90e10da64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212206745892e0c05c2f125be7f5e803dacf8591f7c9b4f9b0c2fca668308e90e10da64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x45892E0C05C2F125 0xBE PUSH32 0x5E803DACF8591F7C9B4F9B0C2FCA668308E90E10DA64736F6C63430008110033 ",
							"sourceMap": "28:33:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212206745892e0c05c2f125be7f5e803dacf8591f7c9b4f9b0c2fca668308e90e10da64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x45892E0C05C2F125 0xBE PUSH32 0x5E803DACF8591F7C9B4F9B0C2FCA668308E90E10DA64736F6C63430008110033 ",
							"sourceMap": "28:33:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 28,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28,
									"end": 61,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28,
									"end": 61,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 28,
									"end": 61,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28,
									"end": 61,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28,
									"end": 61,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28,
									"end": 61,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 61,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28,
									"end": 61,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28,
									"end": 61,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28,
									"end": 61,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28,
									"end": 61,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28,
									"end": 61,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 61,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28,
									"end": 61,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 61,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 61,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206745892e0c05c2f125be7f5e803dacf8591f7c9b4f9b0c2fca668308e90e10da64736f6c63430008110033",
									".code": [
										{
											"begin": 28,
											"end": 61,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28,
											"end": 61,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28,
											"end": 61,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28,
											"end": 61,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 61,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28,
											"end": 61,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"TransferToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TransferToken.sol\":\"TransferToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TransferToken.sol\":{\"keccak256\":\"0x1491f0d0d63fc926a0e18f388e2dd327e174369a864c78d7f4031560681e1242\",\"urls\":[\"bzz-raw://9dbb7bf8c1677351db79af4c9452b848e7974c57a4f1eeabd61016daaea5f715\",\"dweb:/ipfs/QmYa8BXXBPtytWMSoZJSy1o7nGSBndVYdqhD1SKtXmmYBf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> TransferToken.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "TransferToken.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"TransferToken.sol": {
				"ast": {
					"absolutePath": "TransferToken.sol",
					"exportedSymbols": {
						"TransferToken": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "TransferToken",
							"nameLocation": "37:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "28:33:0",
							"usedErrors": []
						}
					],
					"src": "0:61:0"
				},
				"id": 0
			}
		}
	}
}